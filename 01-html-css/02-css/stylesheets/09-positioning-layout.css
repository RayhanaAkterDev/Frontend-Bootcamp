/*
  CSS Positioning Practice
  Demonstrates different positioning techniques:
  - static (default), relative, absolute, fixed, sticky

  Each positioning type changes how the element behaves in the layout.
*/

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
}

h1,
h2 {
    color: darkslategray;
}

.box {
    width: 200px;
    height: 80px;
    background-color: lightcoral;
    color: white;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid brown;
}

/* Default static positioning */
.static {
    position: static;
}

/* Relative positioning */
.relative {
    position: relative;
    top: -10px;
    left: 30px;
    background-color: teal;
}

/* Absolute positioning */
.container {
    position: relative;
    height: 150px;
    background-color: pink;
    border: 2px dashed crimson;
}
.absolute {
    position: absolute;
    top: 50%;
    left: 50%;
    background-color: steelblue;
    transform: translate(-50%, -50%);
}

/* Fixed positioning */
.fixed {
    position: fixed;
    top: 10px;
    right: 10px;
    background-color: darkgreen;
    z-index: 1000;
}

/* Sticky positioning */
.sticky {
    width: 100% !important;
    position: sticky;
    top: 0;
    background-color: darkorange;
}

/* Scroll helper */
.scroll-info {
    margin-top: 40px;
    font-style: italic;
}
